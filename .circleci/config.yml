version: 2.1


executors:
  rust:
    environment:
      PATH: /opt/wasi-sdk/bin:/root/.cargo/bin:/usr/bin:/bin
      LD_LIBRARY_PATH: /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib
    docker:
      - image: oasislabs/rust:latest
    resource_class: xlarge


commands:
  cache_oasis_build:
    steps:
      - checksum_oasis_build
      - save_cache:
          key: oasis-build-{{ checksum "oasis-build.sums" }}
          paths:
            - ~/.cargo/bin/oasis-build

  restore_oasis_build:
    steps:
      - checksum_oasis_build
      - restore_cache:
          keys:
            - oasis-build-{{ checksum "oasis-build.sums" }}

  checksum_oasis_build:
    steps:
      - run:
          name: Checksum oasis-build
          command: |
            find oasis-build/src -type f -name "*.rs" | \
              sort | xargs md5sum oasis-build/Cargo.toml > oasis-build.sums
            echo $(rustc --version) >> oasis-build.sums


jobs:
  init:
    executor: rust
    steps:
      - checkout
      - run:
          name: Rustfmt
          command: cargo fmt -- --check
      - restore_oasis_build
      - run:
          name: Build oasis-build
          command: |
            which oasis-build || \
              (cargo build -p oasis-build && cp target/debug/oasis-build ~/.cargo/bin)
      - cache_oasis_build
      - run:
          name: Unit test
          command: cargo test

  clippy:
    executor: rust
    resource_class: medium
    steps:
      - checkout
      - run:
          name: Clippy
          command: |
            rustup component add clippy || exit 0
            cargo clippy --all-features -- -D clippy::all

  wasm_build:
    executor: rust
    steps:
      - checkout
      - run:
          name: Wasm build
          command: cargo build --target wasm32-unknown-unknown --all-features -p memchain -p bcfs

  build_standalone_examples:
    executor: rust
    environment:
      RUSTC_WRAPPER: oasis-build
    steps:
      - checkout
      - restore_oasis_build
      - run:
          name: cargo build
          command: |
            RUSTC_WRAPPER=oasis-build cargo build --release --target=wasm32-wasi \
              -p ballot \
              -p erc20 \
              -p hello-world \
              -p messaging \
              -p sealed-auctions

  test_idl:
    executor: rust
    environment:
      RUSTC_WRAPPER: oasis-build
    steps:
      - checkout
      - restore_oasis_build
      - run:
          name: Test IDL generation
          working_directory: tests/idl-gen
          command: cargo build --release --target wasm32-wasi --bins && cargo test --lib

  test_imports:
    executor: rust
    environment:
      RUSTC_WRAPPER: oasis-build
    steps:
      - checkout
      - restore_oasis_build
      - run:
          name: Build dependency
          working_directory: tests/xcc-b
          command: cargo build --release --target wasm32-wasi --bin xcc-b
      - run:
          name: Build toplevel
          working_directory: tests/xcc-a
          command: cargo build --release --target wasm32-wasi --bin xcc-a && cargo test --lib


workflows:
  version: 2

  test:
    jobs:
      - init
      - clippy
      - wasm_build
      - test_idl:
          requires:
            - init
      - test_imports:
          requires:
            - init
      - build_standalone_examples:
          requires:
            - init
